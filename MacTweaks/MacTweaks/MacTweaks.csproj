<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net7.0-macos</TargetFramework>
    <OutputType>Exe</OutputType>
    <SupportedOSPlatformVersion>12.0</SupportedOSPlatformVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
    <!--    <Entitlements>entitlements.plist</Entitlements>-->
    <!--    <UseHardenedRuntime>true</UseHardenedRuntime>-->
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0-rc.2.23479.6" />
  </ItemGroup>
  <!-- These targets will fire after mmp creates your bundle but before code signing -->
  <PropertyGroup>
    <CreateAppBundleDependsOn>$(CreateAppBundleDependsOn);CopyOurFiles;HelloWorld</CreateAppBundleDependsOn>
  </PropertyGroup>

  <!-- Since this has no inputs/outputs, it will fire every build -->
  <Target Name="HelloWorld">
    <Message Text="This is us doing something every build, with no inputs/ouputs!" />
  </Target>

  <!-- Since this has inputs/outputs, it will fire only when the inputs are changed or the output does not exist -->
  <Target Name="CopyOurFiles" Inputs="../../MacTweaksNative/MacTweaksNative.dylib" Outputs="$(AppBundleDir)/Contents/MonoBundle/MacTweaksNative.dylib">
    <Message Text="This is us copying the dylib file into the app bundle!" />
    <!-- This could have easily been done w/ a built in build action, but you can extend it arbitrary. -->
    <Copy SourceFiles="../../MacTweaksNative/MacTweaksNative.dylib" DestinationFiles="$(AppBundleDir)/Contents/MonoBundle/MacTweaksNative.dylib" />
    <!-- This is us fixing the install name of the dylib file to match the app bundle path -->
    <Exec Command="install_name_tool -id @executable_path/../MacOS/MacTweaksNative.dylib $(AppBundleDir)/Contents/MonoBundle/MacTweaksNative.dylib" />
  </Target>
</Project>
